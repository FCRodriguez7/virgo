<%# app/views/catalog/show/_lib_video_full.html.erb -%>
<%-
  doc = document ||= @document
  return log_debug("#{__FILE__}: no @document") unless doc
  return unless (marc = doc.marc_display)

  fields_only ||= false

  # === Item title/author
  title_opts = { dev_note: __FILE__ }

  # === Item metadata
  format        = doc.export_format
  is_video      = format.to_s.downcase.include?('video')
  uniform_title = facet_search_links(:uniform_title_facet, doc, title: nil)
  series_title  = facet_search_links(:series_title_facet,  doc, title: nil)

  fields ||= UVA::View::FieldSet.new(
    'Format'                => [format,               always_show],
    'Summary'               => [doc.get_plot_summary, always_show],
    'Director'              => [doc.export_directors, always_show],
    'Performers'            => [doc.get_performers,   always_show],
    'Release Date'          => [:release_date_facet,  always_show],
    'Run Time'              => [video_run_time(doc),  always_show],
    'Language'              => [doc.get_language,     always_show],
    'Rating'                => (doc.get_target_audience if is_video),
    'Target Audience'       => (doc.get_target_audience unless is_video),
    'Notes'                 => ul_list(doc.get_notes),
    'Uniform Title'         => uniform_title,
    'Variant Title'         => marc.variant_title,
    'Abbreviated Title'     => marc.abbreviated_title,
    'Related Title'         => marc.related_title,
    'Title History Note'    => marc.title_history_note,
    'Previous Title'        => marc.previous_title,
    'Later Title'           => marc.later_title,
    'Awards Note'           => marc.awards_note,
    'Local Notes'           => marc.local_note,
    'Edition'               => doc.get_edition_statement,
    'Series'                => series_title,
    'Series Statement'      => doc.get_series_statement,
    'Contents'              => ul_list(doc.get_contents),
    vocabulary_term('ISBN') => doc.export_isbn,
    'Credits'               => doc.export_credits,
    'Published'             => doc.get_pub_statement,
    'Recording Info'        => marc.recording_information,
    label_no_label(doc)     => ul_list(marc.label_no),
    'Terms of Use'          => marc.terms_of_use,
    'Terms of Use (Online)' => doc.values_for(:online_terms_of_use_display),
    'Access Restriction'    => marc.access_restriction,
    'Related Resources'     => link_to_related_resources(doc),
    'Description'           => doc.get_description,
    'Date Indexed'          => show_date_indexed(doc),
  )
  fields_opts = { document: doc, fields: fields }

  template_opts = title_opts.merge(fields_opts)

  view_debug(__FILE__)
-%>
<%- if fields_only -%>
  <%= render 'catalog/show/shared/fields', fields_opts %>
<%- else -%>
  <%= render 'catalog/show/template/basic', template_opts %>
<%- end -%>
